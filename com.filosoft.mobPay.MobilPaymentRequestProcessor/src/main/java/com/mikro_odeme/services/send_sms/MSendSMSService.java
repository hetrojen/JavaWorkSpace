package com.mikro_odeme.services.send_sms;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2012-08-27T16:47:27.332+03:00
 * Generated source version: 2.6.1
 * 
 */
@WebServiceClient(name = "MSendSMSService", 
                  wsdlLocation = "http://vas.mikro-odeme.com/services/msendsmsservice.asmx?WSDL",
                  targetNamespace = "http://services.mikro-odeme.com/") 
public class MSendSMSService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://services.mikro-odeme.com/", "MSendSMSService");
    public final static QName MSendSMSServiceSoap = new QName("http://services.mikro-odeme.com/", "MSendSMSServiceSoap");
    public final static QName MSendSMSServiceSoap12 = new QName("http://services.mikro-odeme.com/", "MSendSMSServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://vas.mikro-odeme.com/services/msendsmsservice.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MSendSMSService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://vas.mikro-odeme.com/services/msendsmsservice.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public MSendSMSService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MSendSMSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MSendSMSService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns MSendSMSServiceSoap
     */
    @WebEndpoint(name = "MSendSMSServiceSoap")
    public MSendSMSServiceSoap getMSendSMSServiceSoap() {
        return super.getPort(MSendSMSServiceSoap, MSendSMSServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MSendSMSServiceSoap
     */
    @WebEndpoint(name = "MSendSMSServiceSoap")
    public MSendSMSServiceSoap getMSendSMSServiceSoap(WebServiceFeature... features) {
        return super.getPort(MSendSMSServiceSoap, MSendSMSServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns MSendSMSServiceSoap
     */
    @WebEndpoint(name = "MSendSMSServiceSoap12")
    public MSendSMSServiceSoap getMSendSMSServiceSoap12() {
        return super.getPort(MSendSMSServiceSoap12, MSendSMSServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MSendSMSServiceSoap
     */
    @WebEndpoint(name = "MSendSMSServiceSoap12")
    public MSendSMSServiceSoap getMSendSMSServiceSoap12(WebServiceFeature... features) {
        return super.getPort(MSendSMSServiceSoap12, MSendSMSServiceSoap.class, features);
    }

}
